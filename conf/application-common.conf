# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="gB;07Os4V2KPTX5;udl@;82AaR<F9U<iRQKgm9y]_r7hVaQYrp=2g2iAVstFgAAl"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=com.mysql.jdbc.Driver
db.default.url="jdbc:mysql://localhost:3306/bugatti?characterEncoding=utf8"
#db.default.url="jdbc:mysql://172.19.0.200:3306/bugatti?characterEncoding=utf8"
db.default.user="bugatti"
db.default.password="bugatti"
#db.default.user="root"
#db.default.password=""

# Set a connection's default autocommit setting
db.default.autocommit=true

# Set a connection's default isolation level
db.default.isolation=READ_COMMITTED

# In order to reduce lock contention and thus improve performance,
# each incoming connection request picks off a connection from a
# pool that has thread-affinity.
# The higher this number, the better your performance will be for the
# case when you have plenty of short-lived threads.
# Beyond a certain threshold, maintenance of these pools will start
# to have a negative effect on performance (and only for the case
# when connections on a partition start running out).
db.default.partitionCount=2

# The number of connections to create per partition. Setting this to
# 5 with 3 partitions means you will have 15 unique connections to the
# database. Note that BoneCP will not create all these connections in
# one go but rather start off with minConnectionsPerPartition and
# gradually increase connections as required.
db.default.maxConnectionsPerPartition=50

# The number of initial connections, per partition.
db.default.minConnectionsPerPartition=5

# When the available connections are about to run out, BoneCP will
# dynamically create new ones in batches. This property controls
# how many new connections to create in one go (up to a maximum of
# maxConnectionsPerPartition). Note: This is a per-partition setting.
db.default.acquireIncrement=1

# After attempting to acquire a connection and failing, try to
# connect this number of times before giving up.
db.default.acquireRetryAttempts=10

# How long to wait before attempting to obtain a
# connection again after a failure.
db.default.acquireRetryDelay=5 seconds

# The maximum time to wait before a call
# to getConnection is timed out.
db.default.connectionTimeout=1 second

# Idle max age
db.default.idleMaxAge=10 minute

# This sets the time for a connection to remain idle before sending a test query to the DB.
# This is useful to prevent a DB from timing out connections on its end.
db.default.idleConnectionTestPeriod=5 minutes

# An initial SQL statement that is run only when
# a connection is first created.
db.default.initSQL="SELECT 1"

# If enabled, log SQL statements being executed.
db.default.logStatements=true

# The maximum connection age.
db.default.maxConnectionAge=1 hour

#db.default.disableConnectionTracking=true

db.default.statisticsEnabled=true
db.default.disableJMX=false

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
#logger.root=ERROR

# Logger used by the framework:
#logger.play=INFO

# Logger provided to your application:
#logger.application=DEBUG

#logger.action_log=INFO

# Logger jdbc
# logger.com.jolbox.bonecp=DEBUG
# logger.scala.slick=INFO

git.init=true

# open api, jenkins token
auth.token=ecd39a460ae901b39d1b997d4a1566e2

# site info
site.domain="ofpay.com"

# session time(s)
cache.expiration=3600

# 解决remote ip获取不正确的问题
trustxforwarded=true

# nexus版本地址
nexus.rep_url="http://nexus.dev.ofpay.com/nexus/content/groups/public"

# 上传配置文件大小,最大16M,默认10M
file.exceeded.max_size=10485760
# 上传配置文件(特殊格式表明二进制),半角逗号分割
file.extension.octet_list="key,jks,jar"

# http请求体大小
parsers.text.maxLength=1024K

# 项目版本
app.version="6.1.2"
